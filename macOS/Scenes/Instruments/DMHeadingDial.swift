//
//  DMHeadingDial.swift
//  XBridge
//
//  Created by Christopher Alford on 02.04.19.
//  Copyright Â© 2019 Marine+Digital. All rights reserved.
//
//  Generated by PaintCode
//  http://www.paintcodeapp.com
//

import Foundation
import Cocoa

public class DMHeadingDial : NSObject {

    //// Cache

    private struct Cache {
        static let color7: NSColor = NSColor(red: 0.698, green: 0.824, blue: 0.734, alpha: 1)
    }

    //// Colors

    @objc dynamic public class var color7: NSColor { return Cache.color7 }

    //// Drawing Methods

    @objc dynamic public class func drawDMHeadingCompass(frame targetFrame: NSRect = NSRect(x: 0, y: 0, width: 300, height: 300), resizing: ResizingBehavior = .aspectFit, cardRotation: CGFloat = 0, textRotation: CGFloat = 0, heading: String = "888.8", mode: String = "TRUE") {
        //// General Declarations
        let context = NSGraphicsContext.current!.cgContext
        
        //// Resize to Target Frame
        NSGraphicsContext.saveGraphicsState()
        let resizedFrame: NSRect = resizing.apply(rect: NSRect(x: 0, y: 0, width: 300, height: 300), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 300, y: resizedFrame.height / 300)


        //// Color Declarations
        let strokeColor = NSColor(red: 0.51, green: 0.507, blue: 0.51, alpha: 1)
        let strokeColor2 = NSColor(red: 0.657, green: 0.657, blue: 0.657, alpha: 1)
        let fillColor = NSColor(red: 1, green: 1, blue: 1, alpha: 1)
        let strokeColor3 = NSColor(red: 0.492, green: 0.492, blue: 0.492, alpha: 1)
        let strokeColor4 = NSColor(red: 0.86, green: 0.126, blue: 0.136, alpha: 1)
        let color = NSColor(red: 0.723, green: 0.723, blue: 0.723, alpha: 1)
        let color4 = NSColor(red: 0.987, green: 0.249, blue: 0.184, alpha: 0.588)
        let color5 = NSColor(red: 0.251, green: 0.949, blue: 0.42, alpha: 0.588)

        //// Card
        NSGraphicsContext.saveGraphicsState()
        context.translateBy(x: 150, y: 150)
        context.rotate(by: cardRotation * CGFloat.pi/180)



        //// Oval 3 Drawing
        let oval3Path = NSBezierPath(ovalIn: NSRect(x: -139, y: -139, width: 278, height: 278))
        strokeColor2.setStroke()
        oval3Path.lineWidth = 1
        oval3Path.stroke()


        //// Degrees Drawing
        let degreesPath = NSBezierPath()
        degreesPath.move(to: NSPoint(x: -0, y: 145.52))
        degreesPath.line(to: NSPoint(x: -0, y: 72.76))
        degreesPath.move(to: NSPoint(x: 2.54, y: 145.5))
        degreesPath.line(to: NSPoint(x: 1.27, y: 72.75))
        degreesPath.move(to: NSPoint(x: 5.08, y: 145.43))
        degreesPath.line(to: NSPoint(x: 2.54, y: 72.72))
        degreesPath.move(to: NSPoint(x: 7.62, y: 145.32))
        degreesPath.line(to: NSPoint(x: 3.81, y: 72.66))
        degreesPath.move(to: NSPoint(x: 10.15, y: 145.17))
        degreesPath.line(to: NSPoint(x: 5.08, y: 72.58))
        degreesPath.move(to: NSPoint(x: 12.68, y: 144.97))
        degreesPath.line(to: NSPoint(x: 6.34, y: 72.48))
        degreesPath.move(to: NSPoint(x: 15.21, y: 144.72))
        degreesPath.line(to: NSPoint(x: 7.61, y: 72.36))
        degreesPath.move(to: NSPoint(x: 17.73, y: 144.44))
        degreesPath.line(to: NSPoint(x: 8.87, y: 72.22))
        degreesPath.move(to: NSPoint(x: 20.25, y: 144.11))
        degreesPath.line(to: NSPoint(x: 10.13, y: 72.05))
        degreesPath.move(to: NSPoint(x: 22.76, y: 143.73))
        degreesPath.line(to: NSPoint(x: 11.38, y: 71.86))
        degreesPath.move(to: NSPoint(x: 25.27, y: 143.31))
        degreesPath.line(to: NSPoint(x: 12.63, y: 71.66))
        degreesPath.move(to: NSPoint(x: 27.77, y: 142.85))
        degreesPath.line(to: NSPoint(x: 13.88, y: 71.42))
        degreesPath.move(to: NSPoint(x: 30.26, y: 142.34))
        degreesPath.line(to: NSPoint(x: 15.13, y: 71.17))
        degreesPath.move(to: NSPoint(x: 32.74, y: 141.79))
        degreesPath.line(to: NSPoint(x: 16.37, y: 70.9))
        degreesPath.move(to: NSPoint(x: 35.2, y: 141.2))
        degreesPath.line(to: NSPoint(x: 17.6, y: 70.6))
        degreesPath.move(to: NSPoint(x: 37.66, y: 140.56))
        degreesPath.line(to: NSPoint(x: 18.83, y: 70.28))
        degreesPath.move(to: NSPoint(x: 40.11, y: 139.88))
        degreesPath.line(to: NSPoint(x: 20.06, y: 69.94))
        degreesPath.move(to: NSPoint(x: 42.55, y: 139.16))
        degreesPath.line(to: NSPoint(x: 21.27, y: 69.58))
        degreesPath.move(to: NSPoint(x: 44.97, y: 138.4))
        degreesPath.line(to: NSPoint(x: 22.48, y: 69.2))
        degreesPath.move(to: NSPoint(x: 47.38, y: 137.59))
        degreesPath.line(to: NSPoint(x: 23.69, y: 68.8))
        degreesPath.move(to: NSPoint(x: 49.77, y: 136.75))
        degreesPath.line(to: NSPoint(x: 24.89, y: 68.37))
        degreesPath.move(to: NSPoint(x: 52.15, y: 135.86))
        degreesPath.line(to: NSPoint(x: 26.08, y: 67.93))
        degreesPath.move(to: NSPoint(x: 54.51, y: 134.93))
        degreesPath.line(to: NSPoint(x: 27.26, y: 67.46))
        degreesPath.move(to: NSPoint(x: 56.86, y: 133.95))
        degreesPath.line(to: NSPoint(x: 28.43, y: 66.98))
        degreesPath.move(to: NSPoint(x: 59.19, y: 132.94))
        degreesPath.line(to: NSPoint(x: 29.59, y: 66.47))
        degreesPath.move(to: NSPoint(x: 61.5, y: 131.89))
        degreesPath.line(to: NSPoint(x: 30.75, y: 65.94))
        degreesPath.move(to: NSPoint(x: 63.79, y: 130.79))
        degreesPath.line(to: NSPoint(x: 31.9, y: 65.4))
        degreesPath.move(to: NSPoint(x: 66.07, y: 129.66))
        degreesPath.line(to: NSPoint(x: 33.03, y: 64.83))
        degreesPath.move(to: NSPoint(x: 68.32, y: 128.49))
        degreesPath.line(to: NSPoint(x: 34.16, y: 64.24))
        degreesPath.move(to: NSPoint(x: 70.55, y: 127.28))
        degreesPath.line(to: NSPoint(x: 35.28, y: 63.64))
        degreesPath.move(to: NSPoint(x: 72.76, y: 126.03))
        degreesPath.line(to: NSPoint(x: 36.38, y: 63.01))
        degreesPath.move(to: NSPoint(x: 74.95, y: 124.74))
        degreesPath.line(to: NSPoint(x: 37.47, y: 62.37))
        degreesPath.move(to: NSPoint(x: 77.11, y: 123.41))
        degreesPath.line(to: NSPoint(x: 38.56, y: 61.7))
        degreesPath.move(to: NSPoint(x: 79.26, y: 122.04))
        degreesPath.line(to: NSPoint(x: 39.63, y: 61.02))
        degreesPath.move(to: NSPoint(x: 81.37, y: 120.64))
        degreesPath.line(to: NSPoint(x: 40.69, y: 60.32))
        degreesPath.move(to: NSPoint(x: 83.47, y: 119.2))
        degreesPath.line(to: NSPoint(x: 41.73, y: 59.6))
        degreesPath.move(to: NSPoint(x: 85.54, y: 117.73))
        degreesPath.line(to: NSPoint(x: 42.77, y: 58.86))
        degreesPath.move(to: NSPoint(x: 87.58, y: 116.22))
        degreesPath.line(to: NSPoint(x: 43.79, y: 58.11))
        degreesPath.move(to: NSPoint(x: 89.59, y: 114.67))
        degreesPath.line(to: NSPoint(x: 44.8, y: 57.34))
        degreesPath.move(to: NSPoint(x: 91.58, y: 113.09))
        degreesPath.line(to: NSPoint(x: 45.79, y: 56.55))
        degreesPath.move(to: NSPoint(x: 93.54, y: 111.48))
        degreesPath.line(to: NSPoint(x: 46.77, y: 55.74))
        degreesPath.move(to: NSPoint(x: 95.47, y: 109.83))
        degreesPath.line(to: NSPoint(x: 47.74, y: 54.91))
        degreesPath.move(to: NSPoint(x: 97.37, y: 108.14))
        degreesPath.line(to: NSPoint(x: 48.69, y: 54.07))
        degreesPath.move(to: NSPoint(x: 99.25, y: 106.43))
        degreesPath.line(to: NSPoint(x: 49.62, y: 53.21))
        degreesPath.move(to: NSPoint(x: 101.09, y: 104.68))
        degreesPath.line(to: NSPoint(x: 50.54, y: 52.34))
        degreesPath.move(to: NSPoint(x: 102.9, y: 102.9))
        degreesPath.line(to: NSPoint(x: 51.45, y: 51.45))
        degreesPath.move(to: NSPoint(x: 104.68, y: 101.09))
        degreesPath.line(to: NSPoint(x: 52.34, y: 50.54))
        degreesPath.move(to: NSPoint(x: 106.43, y: 99.25))
        degreesPath.line(to: NSPoint(x: 53.21, y: 49.62))
        degreesPath.move(to: NSPoint(x: 108.14, y: 97.37))
        degreesPath.line(to: NSPoint(x: 54.07, y: 48.69))
        degreesPath.move(to: NSPoint(x: 109.83, y: 95.47))
        degreesPath.line(to: NSPoint(x: 54.91, y: 47.74))
        degreesPath.move(to: NSPoint(x: 111.48, y: 93.54))
        degreesPath.line(to: NSPoint(x: 55.74, y: 46.77))
        degreesPath.move(to: NSPoint(x: 113.09, y: 91.58))
        degreesPath.line(to: NSPoint(x: 56.55, y: 45.79))
        degreesPath.move(to: NSPoint(x: 114.67, y: 89.59))
        degreesPath.line(to: NSPoint(x: 57.34, y: 44.8))
        degreesPath.move(to: NSPoint(x: 116.22, y: 87.58))
        degreesPath.line(to: NSPoint(x: 58.11, y: 43.79))
        degreesPath.move(to: NSPoint(x: 117.73, y: 85.54))
        degreesPath.line(to: NSPoint(x: 58.86, y: 42.77))
        degreesPath.move(to: NSPoint(x: 119.2, y: 83.47))
        degreesPath.line(to: NSPoint(x: 59.6, y: 41.73))
        degreesPath.move(to: NSPoint(x: 120.64, y: 81.37))
        degreesPath.line(to: NSPoint(x: 60.32, y: 40.69))
        degreesPath.move(to: NSPoint(x: 122.04, y: 79.26))
        degreesPath.line(to: NSPoint(x: 61.02, y: 39.63))
        degreesPath.move(to: NSPoint(x: 123.41, y: 77.11))
        degreesPath.line(to: NSPoint(x: 61.7, y: 38.56))
        degreesPath.move(to: NSPoint(x: 124.74, y: 74.95))
        degreesPath.line(to: NSPoint(x: 62.37, y: 37.47))
        degreesPath.move(to: NSPoint(x: 126.03, y: 72.76))
        degreesPath.line(to: NSPoint(x: 63.01, y: 36.38))
        degreesPath.move(to: NSPoint(x: 127.28, y: 70.55))
        degreesPath.line(to: NSPoint(x: 63.64, y: 35.28))
        degreesPath.move(to: NSPoint(x: 128.49, y: 68.32))
        degreesPath.line(to: NSPoint(x: 64.24, y: 34.16))
        degreesPath.move(to: NSPoint(x: 129.66, y: 66.07))
        degreesPath.line(to: NSPoint(x: 64.83, y: 33.03))
        degreesPath.move(to: NSPoint(x: 130.79, y: 63.79))
        degreesPath.line(to: NSPoint(x: 65.4, y: 31.9))
        degreesPath.move(to: NSPoint(x: 131.89, y: 61.5))
        degreesPath.line(to: NSPoint(x: 65.94, y: 30.75))
        degreesPath.move(to: NSPoint(x: 132.94, y: 59.19))
        degreesPath.line(to: NSPoint(x: 66.47, y: 29.59))
        degreesPath.move(to: NSPoint(x: 133.95, y: 56.86))
        degreesPath.line(to: NSPoint(x: 66.98, y: 28.43))
        degreesPath.move(to: NSPoint(x: 134.93, y: 54.51))
        degreesPath.line(to: NSPoint(x: 67.46, y: 27.26))
        degreesPath.move(to: NSPoint(x: 135.86, y: 52.15))
        degreesPath.line(to: NSPoint(x: 67.93, y: 26.08))
        degreesPath.move(to: NSPoint(x: 136.75, y: 49.77))
        degreesPath.line(to: NSPoint(x: 68.37, y: 24.89))
        degreesPath.move(to: NSPoint(x: 137.59, y: 47.38))
        degreesPath.line(to: NSPoint(x: 68.8, y: 23.69))
        degreesPath.move(to: NSPoint(x: 138.4, y: 44.97))
        degreesPath.line(to: NSPoint(x: 69.2, y: 22.48))
        degreesPath.move(to: NSPoint(x: 139.16, y: 42.55))
        degreesPath.line(to: NSPoint(x: 69.58, y: 21.27))
        degreesPath.move(to: NSPoint(x: 139.88, y: 40.11))
        degreesPath.line(to: NSPoint(x: 69.94, y: 20.06))
        degreesPath.move(to: NSPoint(x: 140.56, y: 37.66))
        degreesPath.line(to: NSPoint(x: 70.28, y: 18.83))
        degreesPath.move(to: NSPoint(x: 141.2, y: 35.2))
        degreesPath.line(to: NSPoint(x: 70.6, y: 17.6))
        degreesPath.move(to: NSPoint(x: 141.79, y: 32.74))
        degreesPath.line(to: NSPoint(x: 70.9, y: 16.37))
        degreesPath.move(to: NSPoint(x: 142.34, y: 30.26))
        degreesPath.line(to: NSPoint(x: 71.17, y: 15.13))
        degreesPath.move(to: NSPoint(x: 142.85, y: 27.77))
        degreesPath.line(to: NSPoint(x: 71.42, y: 13.88))
        degreesPath.move(to: NSPoint(x: 143.31, y: 25.27))
        degreesPath.line(to: NSPoint(x: 71.66, y: 12.63))
        degreesPath.move(to: NSPoint(x: 143.73, y: 22.76))
        degreesPath.line(to: NSPoint(x: 71.86, y: 11.38))
        degreesPath.move(to: NSPoint(x: 144.11, y: 20.25))
        degreesPath.line(to: NSPoint(x: 72.05, y: 10.13))
        degreesPath.move(to: NSPoint(x: 144.44, y: 17.73))
        degreesPath.line(to: NSPoint(x: 72.22, y: 8.87))
        degreesPath.move(to: NSPoint(x: 144.72, y: 15.21))
        degreesPath.line(to: NSPoint(x: 72.36, y: 7.61))
        degreesPath.move(to: NSPoint(x: 144.97, y: 12.68))
        degreesPath.line(to: NSPoint(x: 72.48, y: 6.34))
        degreesPath.move(to: NSPoint(x: 145.17, y: 10.15))
        degreesPath.line(to: NSPoint(x: 72.58, y: 5.08))
        degreesPath.move(to: NSPoint(x: 145.32, y: 7.62))
        degreesPath.line(to: NSPoint(x: 72.66, y: 3.81))
        degreesPath.move(to: NSPoint(x: 145.43, y: 5.08))
        degreesPath.line(to: NSPoint(x: 72.72, y: 2.54))
        degreesPath.move(to: NSPoint(x: 145.5, y: 2.54))
        degreesPath.line(to: NSPoint(x: 72.75, y: 1.27))
        degreesPath.move(to: NSPoint(x: 145.52, y: 0))
        degreesPath.line(to: NSPoint(x: 72.76, y: 0))
        degreesPath.move(to: NSPoint(x: 145.5, y: -2.54))
        degreesPath.line(to: NSPoint(x: 72.75, y: -1.27))
        degreesPath.move(to: NSPoint(x: 145.43, y: -5.08))
        degreesPath.line(to: NSPoint(x: 72.72, y: -2.54))
        degreesPath.move(to: NSPoint(x: 145.32, y: -7.62))
        degreesPath.line(to: NSPoint(x: 72.66, y: -3.81))
        degreesPath.move(to: NSPoint(x: 145.17, y: -10.15))
        degreesPath.line(to: NSPoint(x: 72.58, y: -5.08))
        degreesPath.move(to: NSPoint(x: 144.97, y: -12.68))
        degreesPath.line(to: NSPoint(x: 72.48, y: -6.34))
        degreesPath.move(to: NSPoint(x: 144.72, y: -15.21))
        degreesPath.line(to: NSPoint(x: 72.36, y: -7.61))
        degreesPath.move(to: NSPoint(x: 144.44, y: -17.73))
        degreesPath.line(to: NSPoint(x: 72.22, y: -8.87))
        degreesPath.move(to: NSPoint(x: 144.11, y: -20.25))
        degreesPath.line(to: NSPoint(x: 72.05, y: -10.13))
        degreesPath.move(to: NSPoint(x: 143.73, y: -22.76))
        degreesPath.line(to: NSPoint(x: 71.86, y: -11.38))
        degreesPath.move(to: NSPoint(x: 143.31, y: -25.27))
        degreesPath.line(to: NSPoint(x: 71.66, y: -12.63))
        degreesPath.move(to: NSPoint(x: 142.85, y: -27.77))
        degreesPath.line(to: NSPoint(x: 71.42, y: -13.88))
        degreesPath.move(to: NSPoint(x: 142.34, y: -30.26))
        degreesPath.line(to: NSPoint(x: 71.17, y: -15.13))
        degreesPath.move(to: NSPoint(x: 141.79, y: -32.74))
        degreesPath.line(to: NSPoint(x: 70.9, y: -16.37))
        degreesPath.move(to: NSPoint(x: 141.2, y: -35.2))
        degreesPath.line(to: NSPoint(x: 70.6, y: -17.6))
        degreesPath.move(to: NSPoint(x: 140.56, y: -37.66))
        degreesPath.line(to: NSPoint(x: 70.28, y: -18.83))
        degreesPath.move(to: NSPoint(x: 139.88, y: -40.11))
        degreesPath.line(to: NSPoint(x: 69.94, y: -20.06))
        degreesPath.move(to: NSPoint(x: 139.16, y: -42.55))
        degreesPath.line(to: NSPoint(x: 69.58, y: -21.27))
        degreesPath.move(to: NSPoint(x: 138.4, y: -44.97))
        degreesPath.line(to: NSPoint(x: 69.2, y: -22.48))
        degreesPath.move(to: NSPoint(x: 137.59, y: -47.38))
        degreesPath.line(to: NSPoint(x: 68.8, y: -23.69))
        degreesPath.move(to: NSPoint(x: 136.75, y: -49.77))
        degreesPath.line(to: NSPoint(x: 68.37, y: -24.89))
        degreesPath.move(to: NSPoint(x: 135.86, y: -52.15))
        degreesPath.line(to: NSPoint(x: 67.93, y: -26.08))
        degreesPath.move(to: NSPoint(x: 134.93, y: -54.51))
        degreesPath.line(to: NSPoint(x: 67.46, y: -27.26))
        degreesPath.move(to: NSPoint(x: 133.95, y: -56.86))
        degreesPath.line(to: NSPoint(x: 66.98, y: -28.43))
        degreesPath.move(to: NSPoint(x: 132.94, y: -59.19))
        degreesPath.line(to: NSPoint(x: 66.47, y: -29.59))
        degreesPath.move(to: NSPoint(x: 131.89, y: -61.5))
        degreesPath.line(to: NSPoint(x: 65.94, y: -30.75))
        degreesPath.move(to: NSPoint(x: 130.79, y: -63.79))
        degreesPath.line(to: NSPoint(x: 65.4, y: -31.9))
        degreesPath.move(to: NSPoint(x: 129.66, y: -66.07))
        degreesPath.line(to: NSPoint(x: 64.83, y: -33.03))
        degreesPath.move(to: NSPoint(x: 128.49, y: -68.32))
        degreesPath.line(to: NSPoint(x: 64.24, y: -34.16))
        degreesPath.move(to: NSPoint(x: 127.28, y: -70.55))
        degreesPath.line(to: NSPoint(x: 63.64, y: -35.28))
        degreesPath.move(to: NSPoint(x: 126.03, y: -72.76))
        degreesPath.line(to: NSPoint(x: 63.01, y: -36.38))
        degreesPath.move(to: NSPoint(x: 124.74, y: -74.95))
        degreesPath.line(to: NSPoint(x: 62.37, y: -37.47))
        degreesPath.move(to: NSPoint(x: 123.41, y: -77.11))
        degreesPath.line(to: NSPoint(x: 61.7, y: -38.56))
        degreesPath.move(to: NSPoint(x: 122.04, y: -79.26))
        degreesPath.line(to: NSPoint(x: 61.02, y: -39.63))
        degreesPath.move(to: NSPoint(x: 120.64, y: -81.37))
        degreesPath.line(to: NSPoint(x: 60.32, y: -40.69))
        degreesPath.move(to: NSPoint(x: 119.2, y: -83.47))
        degreesPath.line(to: NSPoint(x: 59.6, y: -41.73))
        degreesPath.move(to: NSPoint(x: 117.73, y: -85.54))
        degreesPath.line(to: NSPoint(x: 58.86, y: -42.77))
        degreesPath.move(to: NSPoint(x: 116.22, y: -87.58))
        degreesPath.line(to: NSPoint(x: 58.11, y: -43.79))
        degreesPath.move(to: NSPoint(x: 114.67, y: -89.59))
        degreesPath.line(to: NSPoint(x: 57.34, y: -44.8))
        degreesPath.move(to: NSPoint(x: 113.09, y: -91.58))
        degreesPath.line(to: NSPoint(x: 56.55, y: -45.79))
        degreesPath.move(to: NSPoint(x: 111.48, y: -93.54))
        degreesPath.line(to: NSPoint(x: 55.74, y: -46.77))
        degreesPath.move(to: NSPoint(x: 109.83, y: -95.47))
        degreesPath.line(to: NSPoint(x: 54.91, y: -47.74))
        degreesPath.move(to: NSPoint(x: 108.14, y: -97.37))
        degreesPath.line(to: NSPoint(x: 54.07, y: -48.69))
        degreesPath.move(to: NSPoint(x: 106.43, y: -99.25))
        degreesPath.line(to: NSPoint(x: 53.21, y: -49.62))
        degreesPath.move(to: NSPoint(x: 104.68, y: -101.09))
        degreesPath.line(to: NSPoint(x: 52.34, y: -50.54))
        degreesPath.move(to: NSPoint(x: 102.9, y: -102.9))
        degreesPath.line(to: NSPoint(x: 51.45, y: -51.45))
        degreesPath.move(to: NSPoint(x: 101.09, y: -104.68))
        degreesPath.line(to: NSPoint(x: 50.54, y: -52.34))
        degreesPath.move(to: NSPoint(x: 99.25, y: -106.43))
        degreesPath.line(to: NSPoint(x: 49.62, y: -53.21))
        degreesPath.move(to: NSPoint(x: 97.37, y: -108.14))
        degreesPath.line(to: NSPoint(x: 48.69, y: -54.07))
        degreesPath.move(to: NSPoint(x: 95.47, y: -109.83))
        degreesPath.line(to: NSPoint(x: 47.74, y: -54.91))
        degreesPath.move(to: NSPoint(x: 93.54, y: -111.48))
        degreesPath.line(to: NSPoint(x: 46.77, y: -55.74))
        degreesPath.move(to: NSPoint(x: 91.58, y: -113.09))
        degreesPath.line(to: NSPoint(x: 45.79, y: -56.55))
        degreesPath.move(to: NSPoint(x: 89.59, y: -114.67))
        degreesPath.line(to: NSPoint(x: 44.8, y: -57.34))
        degreesPath.move(to: NSPoint(x: 87.58, y: -116.22))
        degreesPath.line(to: NSPoint(x: 43.79, y: -58.11))
        degreesPath.move(to: NSPoint(x: 85.54, y: -117.73))
        degreesPath.line(to: NSPoint(x: 42.77, y: -58.86))
        degreesPath.move(to: NSPoint(x: 83.47, y: -119.2))
        degreesPath.line(to: NSPoint(x: 41.73, y: -59.6))
        degreesPath.move(to: NSPoint(x: 81.37, y: -120.64))
        degreesPath.line(to: NSPoint(x: 40.69, y: -60.32))
        degreesPath.move(to: NSPoint(x: 79.26, y: -122.04))
        degreesPath.line(to: NSPoint(x: 39.63, y: -61.02))
        degreesPath.move(to: NSPoint(x: 77.11, y: -123.41))
        degreesPath.line(to: NSPoint(x: 38.56, y: -61.7))
        degreesPath.move(to: NSPoint(x: 74.95, y: -124.74))
        degreesPath.line(to: NSPoint(x: 37.47, y: -62.37))
        degreesPath.move(to: NSPoint(x: 72.76, y: -126.03))
        degreesPath.line(to: NSPoint(x: 36.38, y: -63.01))
        degreesPath.move(to: NSPoint(x: 70.55, y: -127.28))
        degreesPath.line(to: NSPoint(x: 35.28, y: -63.64))
        degreesPath.move(to: NSPoint(x: 68.32, y: -128.49))
        degreesPath.line(to: NSPoint(x: 34.16, y: -64.24))
        degreesPath.move(to: NSPoint(x: 66.07, y: -129.66))
        degreesPath.line(to: NSPoint(x: 33.03, y: -64.83))
        degreesPath.move(to: NSPoint(x: 63.79, y: -130.79))
        degreesPath.line(to: NSPoint(x: 31.9, y: -65.4))
        degreesPath.move(to: NSPoint(x: 61.5, y: -131.89))
        degreesPath.line(to: NSPoint(x: 30.75, y: -65.94))
        degreesPath.move(to: NSPoint(x: 59.19, y: -132.94))
        degreesPath.line(to: NSPoint(x: 29.59, y: -66.47))
        degreesPath.move(to: NSPoint(x: 56.86, y: -133.95))
        degreesPath.line(to: NSPoint(x: 28.43, y: -66.98))
        degreesPath.move(to: NSPoint(x: 54.51, y: -134.93))
        degreesPath.line(to: NSPoint(x: 27.26, y: -67.46))
        degreesPath.move(to: NSPoint(x: 52.15, y: -135.86))
        degreesPath.line(to: NSPoint(x: 26.08, y: -67.93))
        degreesPath.move(to: NSPoint(x: 49.77, y: -136.75))
        degreesPath.line(to: NSPoint(x: 24.89, y: -68.37))
        degreesPath.move(to: NSPoint(x: 47.38, y: -137.59))
        degreesPath.line(to: NSPoint(x: 23.69, y: -68.8))
        degreesPath.move(to: NSPoint(x: 44.97, y: -138.4))
        degreesPath.line(to: NSPoint(x: 22.48, y: -69.2))
        degreesPath.move(to: NSPoint(x: 42.55, y: -139.16))
        degreesPath.line(to: NSPoint(x: 21.27, y: -69.58))
        degreesPath.move(to: NSPoint(x: 40.11, y: -139.88))
        degreesPath.line(to: NSPoint(x: 20.06, y: -69.94))
        degreesPath.move(to: NSPoint(x: 37.66, y: -140.56))
        degreesPath.line(to: NSPoint(x: 18.83, y: -70.28))
        degreesPath.move(to: NSPoint(x: 35.2, y: -141.2))
        degreesPath.line(to: NSPoint(x: 17.6, y: -70.6))
        degreesPath.move(to: NSPoint(x: 32.74, y: -141.79))
        degreesPath.line(to: NSPoint(x: 16.37, y: -70.9))
        degreesPath.move(to: NSPoint(x: 30.26, y: -142.34))
        degreesPath.line(to: NSPoint(x: 15.13, y: -71.17))
        degreesPath.move(to: NSPoint(x: 27.77, y: -142.85))
        degreesPath.line(to: NSPoint(x: 13.88, y: -71.42))
        degreesPath.move(to: NSPoint(x: 25.27, y: -143.31))
        degreesPath.line(to: NSPoint(x: 12.63, y: -71.66))
        degreesPath.move(to: NSPoint(x: 22.76, y: -143.73))
        degreesPath.line(to: NSPoint(x: 11.38, y: -71.86))
        degreesPath.move(to: NSPoint(x: 20.25, y: -144.11))
        degreesPath.line(to: NSPoint(x: 10.13, y: -72.05))
        degreesPath.move(to: NSPoint(x: 17.73, y: -144.44))
        degreesPath.line(to: NSPoint(x: 8.87, y: -72.22))
        degreesPath.move(to: NSPoint(x: 15.21, y: -144.72))
        degreesPath.line(to: NSPoint(x: 7.61, y: -72.36))
        degreesPath.move(to: NSPoint(x: 12.68, y: -144.97))
        degreesPath.line(to: NSPoint(x: 6.34, y: -72.48))
        degreesPath.move(to: NSPoint(x: 10.15, y: -145.17))
        degreesPath.line(to: NSPoint(x: 5.08, y: -72.58))
        degreesPath.move(to: NSPoint(x: 7.62, y: -145.32))
        degreesPath.line(to: NSPoint(x: 3.81, y: -72.66))
        degreesPath.move(to: NSPoint(x: 5.08, y: -145.43))
        degreesPath.line(to: NSPoint(x: 2.54, y: -72.72))
        degreesPath.move(to: NSPoint(x: 2.54, y: -145.5))
        degreesPath.line(to: NSPoint(x: 1.27, y: -72.75))
        degreesPath.move(to: NSPoint(x: -0, y: -145.52))
        degreesPath.line(to: NSPoint(x: -0, y: -72.76))
        degreesPath.move(to: NSPoint(x: -2.54, y: -145.5))
        degreesPath.line(to: NSPoint(x: -1.27, y: -72.75))
        degreesPath.move(to: NSPoint(x: -5.08, y: -145.43))
        degreesPath.line(to: NSPoint(x: -2.54, y: -72.72))
        degreesPath.move(to: NSPoint(x: -7.62, y: -145.32))
        degreesPath.line(to: NSPoint(x: -3.81, y: -72.66))
        degreesPath.move(to: NSPoint(x: -10.15, y: -145.17))
        degreesPath.line(to: NSPoint(x: -5.08, y: -72.58))
        degreesPath.move(to: NSPoint(x: -12.68, y: -144.97))
        degreesPath.line(to: NSPoint(x: -6.34, y: -72.48))
        degreesPath.move(to: NSPoint(x: -15.21, y: -144.72))
        degreesPath.line(to: NSPoint(x: -7.61, y: -72.36))
        degreesPath.move(to: NSPoint(x: -17.73, y: -144.44))
        degreesPath.line(to: NSPoint(x: -8.87, y: -72.22))
        degreesPath.move(to: NSPoint(x: -20.25, y: -144.11))
        degreesPath.line(to: NSPoint(x: -10.13, y: -72.05))
        degreesPath.move(to: NSPoint(x: -22.76, y: -143.73))
        degreesPath.line(to: NSPoint(x: -11.38, y: -71.86))
        degreesPath.move(to: NSPoint(x: -25.27, y: -143.31))
        degreesPath.line(to: NSPoint(x: -12.63, y: -71.66))
        degreesPath.move(to: NSPoint(x: -27.77, y: -142.85))
        degreesPath.line(to: NSPoint(x: -13.88, y: -71.42))
        degreesPath.move(to: NSPoint(x: -30.26, y: -142.34))
        degreesPath.line(to: NSPoint(x: -15.13, y: -71.17))
        degreesPath.move(to: NSPoint(x: -32.74, y: -141.79))
        degreesPath.line(to: NSPoint(x: -16.37, y: -70.9))
        degreesPath.move(to: NSPoint(x: -35.2, y: -141.2))
        degreesPath.line(to: NSPoint(x: -17.6, y: -70.6))
        degreesPath.move(to: NSPoint(x: -37.66, y: -140.56))
        degreesPath.line(to: NSPoint(x: -18.83, y: -70.28))
        degreesPath.move(to: NSPoint(x: -40.11, y: -139.88))
        degreesPath.line(to: NSPoint(x: -20.06, y: -69.94))
        degreesPath.move(to: NSPoint(x: -42.55, y: -139.16))
        degreesPath.line(to: NSPoint(x: -21.27, y: -69.58))
        degreesPath.move(to: NSPoint(x: -44.97, y: -138.4))
        degreesPath.line(to: NSPoint(x: -22.48, y: -69.2))
        degreesPath.move(to: NSPoint(x: -47.38, y: -137.59))
        degreesPath.line(to: NSPoint(x: -23.69, y: -68.8))
        degreesPath.move(to: NSPoint(x: -49.77, y: -136.75))
        degreesPath.line(to: NSPoint(x: -24.89, y: -68.37))
        degreesPath.move(to: NSPoint(x: -52.15, y: -135.86))
        degreesPath.line(to: NSPoint(x: -26.08, y: -67.93))
        degreesPath.move(to: NSPoint(x: -54.51, y: -134.93))
        degreesPath.line(to: NSPoint(x: -27.26, y: -67.46))
        degreesPath.move(to: NSPoint(x: -56.86, y: -133.95))
        degreesPath.line(to: NSPoint(x: -28.43, y: -66.98))
        degreesPath.move(to: NSPoint(x: -59.19, y: -132.94))
        degreesPath.line(to: NSPoint(x: -29.59, y: -66.47))
        degreesPath.move(to: NSPoint(x: -61.5, y: -131.89))
        degreesPath.line(to: NSPoint(x: -30.75, y: -65.94))
        degreesPath.move(to: NSPoint(x: -63.79, y: -130.79))
        degreesPath.line(to: NSPoint(x: -31.9, y: -65.4))
        degreesPath.move(to: NSPoint(x: -66.07, y: -129.66))
        degreesPath.line(to: NSPoint(x: -33.03, y: -64.83))
        degreesPath.move(to: NSPoint(x: -68.32, y: -128.49))
        degreesPath.line(to: NSPoint(x: -34.16, y: -64.24))
        degreesPath.move(to: NSPoint(x: -70.55, y: -127.28))
        degreesPath.line(to: NSPoint(x: -35.28, y: -63.64))
        degreesPath.move(to: NSPoint(x: -72.76, y: -126.03))
        degreesPath.line(to: NSPoint(x: -36.38, y: -63.01))
        degreesPath.move(to: NSPoint(x: -74.95, y: -124.74))
        degreesPath.line(to: NSPoint(x: -37.47, y: -62.37))
        degreesPath.move(to: NSPoint(x: -77.11, y: -123.41))
        degreesPath.line(to: NSPoint(x: -38.56, y: -61.7))
        degreesPath.move(to: NSPoint(x: -79.26, y: -122.04))
        degreesPath.line(to: NSPoint(x: -39.63, y: -61.02))
        degreesPath.move(to: NSPoint(x: -81.37, y: -120.64))
        degreesPath.line(to: NSPoint(x: -40.69, y: -60.32))
        degreesPath.move(to: NSPoint(x: -83.47, y: -119.2))
        degreesPath.line(to: NSPoint(x: -41.73, y: -59.6))
        degreesPath.move(to: NSPoint(x: -85.54, y: -117.73))
        degreesPath.line(to: NSPoint(x: -42.77, y: -58.86))
        degreesPath.move(to: NSPoint(x: -87.58, y: -116.22))
        degreesPath.line(to: NSPoint(x: -43.79, y: -58.11))
        degreesPath.move(to: NSPoint(x: -89.59, y: -114.67))
        degreesPath.line(to: NSPoint(x: -44.8, y: -57.34))
        degreesPath.move(to: NSPoint(x: -91.58, y: -113.09))
        degreesPath.line(to: NSPoint(x: -45.79, y: -56.55))
        degreesPath.move(to: NSPoint(x: -93.54, y: -111.48))
        degreesPath.line(to: NSPoint(x: -46.77, y: -55.74))
        degreesPath.move(to: NSPoint(x: -95.47, y: -109.83))
        degreesPath.line(to: NSPoint(x: -47.74, y: -54.91))
        degreesPath.move(to: NSPoint(x: -97.37, y: -108.14))
        degreesPath.line(to: NSPoint(x: -48.69, y: -54.07))
        degreesPath.move(to: NSPoint(x: -99.25, y: -106.43))
        degreesPath.line(to: NSPoint(x: -49.62, y: -53.21))
        degreesPath.move(to: NSPoint(x: -101.09, y: -104.68))
        degreesPath.line(to: NSPoint(x: -50.54, y: -52.34))
        degreesPath.move(to: NSPoint(x: -102.9, y: -102.9))
        degreesPath.line(to: NSPoint(x: -51.45, y: -51.45))
        degreesPath.move(to: NSPoint(x: -104.68, y: -101.09))
        degreesPath.line(to: NSPoint(x: -52.34, y: -50.54))
        degreesPath.move(to: NSPoint(x: -106.43, y: -99.25))
        degreesPath.line(to: NSPoint(x: -53.21, y: -49.62))
        degreesPath.move(to: NSPoint(x: -108.14, y: -97.37))
        degreesPath.line(to: NSPoint(x: -54.07, y: -48.69))
        degreesPath.move(to: NSPoint(x: -109.83, y: -95.47))
        degreesPath.line(to: NSPoint(x: -54.91, y: -47.74))
        degreesPath.move(to: NSPoint(x: -111.48, y: -93.54))
        degreesPath.line(to: NSPoint(x: -55.74, y: -46.77))
        degreesPath.move(to: NSPoint(x: -113.09, y: -91.58))
        degreesPath.line(to: NSPoint(x: -56.55, y: -45.79))
        degreesPath.move(to: NSPoint(x: -114.67, y: -89.59))
        degreesPath.line(to: NSPoint(x: -57.34, y: -44.8))
        degreesPath.move(to: NSPoint(x: -116.22, y: -87.58))
        degreesPath.line(to: NSPoint(x: -58.11, y: -43.79))
        degreesPath.move(to: NSPoint(x: -117.73, y: -85.54))
        degreesPath.line(to: NSPoint(x: -58.86, y: -42.77))
        degreesPath.move(to: NSPoint(x: -119.2, y: -83.47))
        degreesPath.line(to: NSPoint(x: -59.6, y: -41.73))
        degreesPath.move(to: NSPoint(x: -120.64, y: -81.37))
        degreesPath.line(to: NSPoint(x: -60.32, y: -40.69))
        degreesPath.move(to: NSPoint(x: -122.04, y: -79.26))
        degreesPath.line(to: NSPoint(x: -61.02, y: -39.63))
        degreesPath.move(to: NSPoint(x: -123.41, y: -77.11))
        degreesPath.line(to: NSPoint(x: -61.7, y: -38.56))
        degreesPath.move(to: NSPoint(x: -124.74, y: -74.95))
        degreesPath.line(to: NSPoint(x: -62.37, y: -37.47))
        degreesPath.move(to: NSPoint(x: -126.03, y: -72.76))
        degreesPath.line(to: NSPoint(x: -63.01, y: -36.38))
        degreesPath.move(to: NSPoint(x: -127.28, y: -70.55))
        degreesPath.line(to: NSPoint(x: -63.64, y: -35.28))
        degreesPath.move(to: NSPoint(x: -128.49, y: -68.32))
        degreesPath.line(to: NSPoint(x: -64.24, y: -34.16))
        degreesPath.move(to: NSPoint(x: -129.66, y: -66.07))
        degreesPath.line(to: NSPoint(x: -64.83, y: -33.03))
        degreesPath.move(to: NSPoint(x: -130.79, y: -63.79))
        degreesPath.line(to: NSPoint(x: -65.4, y: -31.9))
        degreesPath.move(to: NSPoint(x: -131.89, y: -61.5))
        degreesPath.line(to: NSPoint(x: -65.94, y: -30.75))
        degreesPath.move(to: NSPoint(x: -132.94, y: -59.19))
        degreesPath.line(to: NSPoint(x: -66.47, y: -29.59))
        degreesPath.move(to: NSPoint(x: -133.95, y: -56.86))
        degreesPath.line(to: NSPoint(x: -66.98, y: -28.43))
        degreesPath.move(to: NSPoint(x: -134.93, y: -54.51))
        degreesPath.line(to: NSPoint(x: -67.46, y: -27.26))
        degreesPath.move(to: NSPoint(x: -135.86, y: -52.15))
        degreesPath.line(to: NSPoint(x: -67.93, y: -26.08))
        degreesPath.move(to: NSPoint(x: -136.75, y: -49.77))
        degreesPath.line(to: NSPoint(x: -68.37, y: -24.89))
        degreesPath.move(to: NSPoint(x: -137.59, y: -47.38))
        degreesPath.line(to: NSPoint(x: -68.8, y: -23.69))
        degreesPath.move(to: NSPoint(x: -138.4, y: -44.97))
        degreesPath.line(to: NSPoint(x: -69.2, y: -22.48))
        degreesPath.move(to: NSPoint(x: -139.16, y: -42.55))
        degreesPath.line(to: NSPoint(x: -69.58, y: -21.27))
        degreesPath.move(to: NSPoint(x: -139.88, y: -40.11))
        degreesPath.line(to: NSPoint(x: -69.94, y: -20.06))
        degreesPath.move(to: NSPoint(x: -140.56, y: -37.66))
        degreesPath.line(to: NSPoint(x: -70.28, y: -18.83))
        degreesPath.move(to: NSPoint(x: -141.2, y: -35.2))
        degreesPath.line(to: NSPoint(x: -70.6, y: -17.6))
        degreesPath.move(to: NSPoint(x: -141.79, y: -32.74))
        degreesPath.line(to: NSPoint(x: -70.9, y: -16.37))
        degreesPath.move(to: NSPoint(x: -142.34, y: -30.26))
        degreesPath.line(to: NSPoint(x: -71.17, y: -15.13))
        degreesPath.move(to: NSPoint(x: -142.85, y: -27.77))
        degreesPath.line(to: NSPoint(x: -71.42, y: -13.88))
        degreesPath.move(to: NSPoint(x: -143.31, y: -25.27))
        degreesPath.line(to: NSPoint(x: -71.66, y: -12.63))
        degreesPath.move(to: NSPoint(x: -143.73, y: -22.76))
        degreesPath.line(to: NSPoint(x: -71.86, y: -11.38))
        degreesPath.move(to: NSPoint(x: -144.11, y: -20.25))
        degreesPath.line(to: NSPoint(x: -72.05, y: -10.13))
        degreesPath.move(to: NSPoint(x: -144.44, y: -17.73))
        degreesPath.line(to: NSPoint(x: -72.22, y: -8.87))
        degreesPath.move(to: NSPoint(x: -144.72, y: -15.21))
        degreesPath.line(to: NSPoint(x: -72.36, y: -7.61))
        degreesPath.move(to: NSPoint(x: -144.97, y: -12.68))
        degreesPath.line(to: NSPoint(x: -72.48, y: -6.34))
        degreesPath.move(to: NSPoint(x: -145.17, y: -10.15))
        degreesPath.line(to: NSPoint(x: -72.58, y: -5.08))
        degreesPath.move(to: NSPoint(x: -145.32, y: -7.62))
        degreesPath.line(to: NSPoint(x: -72.66, y: -3.81))
        degreesPath.move(to: NSPoint(x: -145.43, y: -5.08))
        degreesPath.line(to: NSPoint(x: -72.72, y: -2.54))
        degreesPath.move(to: NSPoint(x: -145.5, y: -2.54))
        degreesPath.line(to: NSPoint(x: -72.75, y: -1.27))
        degreesPath.move(to: NSPoint(x: -145.52, y: 0))
        degreesPath.line(to: NSPoint(x: -72.76, y: 0))
        degreesPath.move(to: NSPoint(x: -145.5, y: 2.54))
        degreesPath.line(to: NSPoint(x: -72.75, y: 1.27))
        degreesPath.move(to: NSPoint(x: -145.43, y: 5.08))
        degreesPath.line(to: NSPoint(x: -72.72, y: 2.54))
        degreesPath.move(to: NSPoint(x: -145.32, y: 7.62))
        degreesPath.line(to: NSPoint(x: -72.66, y: 3.81))
        degreesPath.move(to: NSPoint(x: -145.17, y: 10.15))
        degreesPath.line(to: NSPoint(x: -72.58, y: 5.08))
        degreesPath.move(to: NSPoint(x: -144.97, y: 12.68))
        degreesPath.line(to: NSPoint(x: -72.48, y: 6.34))
        degreesPath.move(to: NSPoint(x: -144.72, y: 15.21))
        degreesPath.line(to: NSPoint(x: -72.36, y: 7.61))
        degreesPath.move(to: NSPoint(x: -144.44, y: 17.73))
        degreesPath.line(to: NSPoint(x: -72.22, y: 8.87))
        degreesPath.move(to: NSPoint(x: -144.11, y: 20.25))
        degreesPath.line(to: NSPoint(x: -72.05, y: 10.13))
        degreesPath.move(to: NSPoint(x: -143.73, y: 22.76))
        degreesPath.line(to: NSPoint(x: -71.86, y: 11.38))
        degreesPath.move(to: NSPoint(x: -143.31, y: 25.27))
        degreesPath.line(to: NSPoint(x: -71.66, y: 12.63))
        degreesPath.move(to: NSPoint(x: -142.85, y: 27.77))
        degreesPath.line(to: NSPoint(x: -71.42, y: 13.88))
        degreesPath.move(to: NSPoint(x: -142.34, y: 30.26))
        degreesPath.line(to: NSPoint(x: -71.17, y: 15.13))
        degreesPath.move(to: NSPoint(x: -141.79, y: 32.74))
        degreesPath.line(to: NSPoint(x: -70.9, y: 16.37))
        degreesPath.move(to: NSPoint(x: -141.2, y: 35.2))
        degreesPath.line(to: NSPoint(x: -70.6, y: 17.6))
        degreesPath.move(to: NSPoint(x: -140.56, y: 37.66))
        degreesPath.line(to: NSPoint(x: -70.28, y: 18.83))
        degreesPath.move(to: NSPoint(x: -139.88, y: 40.11))
        degreesPath.line(to: NSPoint(x: -69.94, y: 20.06))
        degreesPath.move(to: NSPoint(x: -139.16, y: 42.55))
        degreesPath.line(to: NSPoint(x: -69.58, y: 21.27))
        degreesPath.move(to: NSPoint(x: -138.4, y: 44.97))
        degreesPath.line(to: NSPoint(x: -69.2, y: 22.48))
        degreesPath.move(to: NSPoint(x: -137.59, y: 47.38))
        degreesPath.line(to: NSPoint(x: -68.8, y: 23.69))
        degreesPath.move(to: NSPoint(x: -136.75, y: 49.77))
        degreesPath.line(to: NSPoint(x: -68.37, y: 24.89))
        degreesPath.move(to: NSPoint(x: -135.86, y: 52.15))
        degreesPath.line(to: NSPoint(x: -67.93, y: 26.08))
        degreesPath.move(to: NSPoint(x: -134.93, y: 54.51))
        degreesPath.line(to: NSPoint(x: -67.46, y: 27.26))
        degreesPath.move(to: NSPoint(x: -133.95, y: 56.86))
        degreesPath.line(to: NSPoint(x: -66.98, y: 28.43))
        degreesPath.move(to: NSPoint(x: -132.94, y: 59.19))
        degreesPath.line(to: NSPoint(x: -66.47, y: 29.59))
        degreesPath.move(to: NSPoint(x: -131.89, y: 61.5))
        degreesPath.line(to: NSPoint(x: -65.94, y: 30.75))
        degreesPath.move(to: NSPoint(x: -130.79, y: 63.79))
        degreesPath.line(to: NSPoint(x: -65.4, y: 31.9))
        degreesPath.move(to: NSPoint(x: -129.66, y: 66.07))
        degreesPath.line(to: NSPoint(x: -64.83, y: 33.03))
        degreesPath.move(to: NSPoint(x: -128.49, y: 68.32))
        degreesPath.line(to: NSPoint(x: -64.24, y: 34.16))
        degreesPath.move(to: NSPoint(x: -127.28, y: 70.55))
        degreesPath.line(to: NSPoint(x: -63.64, y: 35.28))
        degreesPath.move(to: NSPoint(x: -126.03, y: 72.76))
        degreesPath.line(to: NSPoint(x: -63.01, y: 36.38))
        degreesPath.move(to: NSPoint(x: -124.74, y: 74.95))
        degreesPath.line(to: NSPoint(x: -62.37, y: 37.47))
        degreesPath.move(to: NSPoint(x: -123.41, y: 77.11))
        degreesPath.line(to: NSPoint(x: -61.7, y: 38.56))
        degreesPath.move(to: NSPoint(x: -122.04, y: 79.26))
        degreesPath.line(to: NSPoint(x: -61.02, y: 39.63))
        degreesPath.move(to: NSPoint(x: -120.64, y: 81.37))
        degreesPath.line(to: NSPoint(x: -60.32, y: 40.69))
        degreesPath.move(to: NSPoint(x: -119.2, y: 83.47))
        degreesPath.line(to: NSPoint(x: -59.6, y: 41.73))
        degreesPath.move(to: NSPoint(x: -117.73, y: 85.54))
        degreesPath.line(to: NSPoint(x: -58.86, y: 42.77))
        degreesPath.move(to: NSPoint(x: -116.22, y: 87.58))
        degreesPath.line(to: NSPoint(x: -58.11, y: 43.79))
        degreesPath.move(to: NSPoint(x: -114.67, y: 89.59))
        degreesPath.line(to: NSPoint(x: -57.34, y: 44.8))
        degreesPath.move(to: NSPoint(x: -113.09, y: 91.58))
        degreesPath.line(to: NSPoint(x: -56.55, y: 45.79))
        degreesPath.move(to: NSPoint(x: -111.48, y: 93.54))
        degreesPath.line(to: NSPoint(x: -55.74, y: 46.77))
        degreesPath.move(to: NSPoint(x: -109.83, y: 95.47))
        degreesPath.line(to: NSPoint(x: -54.91, y: 47.74))
        degreesPath.move(to: NSPoint(x: -108.14, y: 97.37))
        degreesPath.line(to: NSPoint(x: -54.07, y: 48.69))
        degreesPath.move(to: NSPoint(x: -106.43, y: 99.25))
        degreesPath.line(to: NSPoint(x: -53.21, y: 49.62))
        degreesPath.move(to: NSPoint(x: -104.68, y: 101.09))
        degreesPath.line(to: NSPoint(x: -52.34, y: 50.54))
        degreesPath.move(to: NSPoint(x: -102.9, y: 102.9))
        degreesPath.line(to: NSPoint(x: -51.45, y: 51.45))
        degreesPath.move(to: NSPoint(x: -101.09, y: 104.68))
        degreesPath.line(to: NSPoint(x: -50.54, y: 52.34))
        degreesPath.move(to: NSPoint(x: -99.25, y: 106.43))
        degreesPath.line(to: NSPoint(x: -49.62, y: 53.21))
        degreesPath.move(to: NSPoint(x: -97.37, y: 108.14))
        degreesPath.line(to: NSPoint(x: -48.69, y: 54.07))
        degreesPath.move(to: NSPoint(x: -95.47, y: 109.83))
        degreesPath.line(to: NSPoint(x: -47.74, y: 54.91))
        degreesPath.move(to: NSPoint(x: -93.54, y: 111.48))
        degreesPath.line(to: NSPoint(x: -46.77, y: 55.74))
        degreesPath.move(to: NSPoint(x: -91.58, y: 113.09))
        degreesPath.line(to: NSPoint(x: -45.79, y: 56.55))
        degreesPath.move(to: NSPoint(x: -89.59, y: 114.67))
        degreesPath.line(to: NSPoint(x: -44.8, y: 57.34))
        degreesPath.move(to: NSPoint(x: -87.58, y: 116.22))
        degreesPath.line(to: NSPoint(x: -43.79, y: 58.11))
        degreesPath.move(to: NSPoint(x: -85.54, y: 117.73))
        degreesPath.line(to: NSPoint(x: -42.77, y: 58.86))
        degreesPath.move(to: NSPoint(x: -83.47, y: 119.2))
        degreesPath.line(to: NSPoint(x: -41.73, y: 59.6))
        degreesPath.move(to: NSPoint(x: -81.37, y: 120.64))
        degreesPath.line(to: NSPoint(x: -40.69, y: 60.32))
        degreesPath.move(to: NSPoint(x: -79.26, y: 122.04))
        degreesPath.line(to: NSPoint(x: -39.63, y: 61.02))
        degreesPath.move(to: NSPoint(x: -77.11, y: 123.41))
        degreesPath.line(to: NSPoint(x: -38.56, y: 61.7))
        degreesPath.move(to: NSPoint(x: -74.95, y: 124.74))
        degreesPath.line(to: NSPoint(x: -37.47, y: 62.37))
        degreesPath.move(to: NSPoint(x: -72.76, y: 126.03))
        degreesPath.line(to: NSPoint(x: -36.38, y: 63.01))
        degreesPath.move(to: NSPoint(x: -70.55, y: 127.28))
        degreesPath.line(to: NSPoint(x: -35.28, y: 63.64))
        degreesPath.move(to: NSPoint(x: -68.32, y: 128.49))
        degreesPath.line(to: NSPoint(x: -34.16, y: 64.24))
        degreesPath.move(to: NSPoint(x: -66.07, y: 129.66))
        degreesPath.line(to: NSPoint(x: -33.03, y: 64.83))
        degreesPath.move(to: NSPoint(x: -63.79, y: 130.79))
        degreesPath.line(to: NSPoint(x: -31.9, y: 65.4))
        degreesPath.move(to: NSPoint(x: -61.5, y: 131.89))
        degreesPath.line(to: NSPoint(x: -30.75, y: 65.94))
        degreesPath.move(to: NSPoint(x: -59.19, y: 132.94))
        degreesPath.line(to: NSPoint(x: -29.59, y: 66.47))
        degreesPath.move(to: NSPoint(x: -56.86, y: 133.95))
        degreesPath.line(to: NSPoint(x: -28.43, y: 66.98))
        degreesPath.move(to: NSPoint(x: -54.51, y: 134.93))
        degreesPath.line(to: NSPoint(x: -27.26, y: 67.46))
        degreesPath.move(to: NSPoint(x: -52.15, y: 135.86))
        degreesPath.line(to: NSPoint(x: -26.08, y: 67.93))
        degreesPath.move(to: NSPoint(x: -49.77, y: 136.75))
        degreesPath.line(to: NSPoint(x: -24.89, y: 68.37))
        degreesPath.move(to: NSPoint(x: -47.38, y: 137.59))
        degreesPath.line(to: NSPoint(x: -23.69, y: 68.8))
        degreesPath.move(to: NSPoint(x: -44.97, y: 138.4))
        degreesPath.line(to: NSPoint(x: -22.48, y: 69.2))
        degreesPath.move(to: NSPoint(x: -42.55, y: 139.16))
        degreesPath.line(to: NSPoint(x: -21.27, y: 69.58))
        degreesPath.move(to: NSPoint(x: -40.11, y: 139.88))
        degreesPath.line(to: NSPoint(x: -20.06, y: 69.94))
        degreesPath.move(to: NSPoint(x: -37.66, y: 140.56))
        degreesPath.line(to: NSPoint(x: -18.83, y: 70.28))
        degreesPath.move(to: NSPoint(x: -35.2, y: 141.2))
        degreesPath.line(to: NSPoint(x: -17.6, y: 70.6))
        degreesPath.move(to: NSPoint(x: -32.74, y: 141.79))
        degreesPath.line(to: NSPoint(x: -16.37, y: 70.9))
        degreesPath.move(to: NSPoint(x: -30.26, y: 142.34))
        degreesPath.line(to: NSPoint(x: -15.13, y: 71.17))
        degreesPath.move(to: NSPoint(x: -27.77, y: 142.85))
        degreesPath.line(to: NSPoint(x: -13.88, y: 71.42))
        degreesPath.move(to: NSPoint(x: -25.27, y: 143.31))
        degreesPath.line(to: NSPoint(x: -12.63, y: 71.66))
        degreesPath.move(to: NSPoint(x: -22.76, y: 143.73))
        degreesPath.line(to: NSPoint(x: -11.38, y: 71.86))
        degreesPath.move(to: NSPoint(x: -20.25, y: 144.11))
        degreesPath.line(to: NSPoint(x: -10.13, y: 72.05))
        degreesPath.move(to: NSPoint(x: -17.73, y: 144.44))
        degreesPath.line(to: NSPoint(x: -8.87, y: 72.22))
        degreesPath.move(to: NSPoint(x: -15.21, y: 144.72))
        degreesPath.line(to: NSPoint(x: -7.61, y: 72.36))
        degreesPath.move(to: NSPoint(x: -12.68, y: 144.97))
        degreesPath.line(to: NSPoint(x: -6.34, y: 72.48))
        degreesPath.move(to: NSPoint(x: -10.15, y: 145.17))
        degreesPath.line(to: NSPoint(x: -5.08, y: 72.58))
        degreesPath.move(to: NSPoint(x: -7.62, y: 145.32))
        degreesPath.line(to: NSPoint(x: -3.81, y: 72.66))
        degreesPath.move(to: NSPoint(x: -5.08, y: 145.43))
        degreesPath.line(to: NSPoint(x: -2.54, y: 72.72))
        degreesPath.move(to: NSPoint(x: -2.54, y: 145.5))
        degreesPath.line(to: NSPoint(x: -1.27, y: 72.75))
        strokeColor2.setStroke()
        degreesPath.lineWidth = 1
        degreesPath.lineCapStyle = .square
        degreesPath.stroke()


        //// 360Mask Drawing
        let _360MaskPath = NSBezierPath(ovalIn: NSRect(x: -139, y: -139, width: 278, height: 278))
        fillColor.setFill()
        _360MaskPath.fill()


        //// Oval Drawing
        let ovalPath = NSBezierPath(ovalIn: NSRect(x: -146.35, y: -146.35, width: 292.7, height: 292.7))
        strokeColor.setStroke()
        ovalPath.lineWidth = 1
        ovalPath.stroke()


        //// Thirties Drawing
        let thirtiesPath = NSBezierPath()
        thirtiesPath.move(to: NSPoint(x: -0, y: 146))
        thirtiesPath.line(to: NSPoint(x: -0, y: 73))
        thirtiesPath.move(to: NSPoint(x: 73, y: 126.44))
        thirtiesPath.line(to: NSPoint(x: 36.5, y: 63.22))
        thirtiesPath.move(to: NSPoint(x: 126.44, y: 73))
        thirtiesPath.line(to: NSPoint(x: 63.22, y: 36.5))
        thirtiesPath.move(to: NSPoint(x: 146, y: 0))
        thirtiesPath.line(to: NSPoint(x: 73, y: 0))
        thirtiesPath.move(to: NSPoint(x: 126.44, y: -73))
        thirtiesPath.line(to: NSPoint(x: 63.22, y: -36.5))
        thirtiesPath.move(to: NSPoint(x: 73, y: -126.44))
        thirtiesPath.line(to: NSPoint(x: 36.5, y: -63.22))
        thirtiesPath.move(to: NSPoint(x: -0, y: -146))
        thirtiesPath.line(to: NSPoint(x: -0, y: -73))
        thirtiesPath.move(to: NSPoint(x: -73, y: -126.44))
        thirtiesPath.line(to: NSPoint(x: -36.5, y: -63.22))
        thirtiesPath.move(to: NSPoint(x: -126.44, y: -73))
        thirtiesPath.line(to: NSPoint(x: -63.22, y: -36.5))
        thirtiesPath.move(to: NSPoint(x: -146, y: 0))
        thirtiesPath.line(to: NSPoint(x: -73, y: 0))
        thirtiesPath.move(to: NSPoint(x: -126.44, y: 73))
        thirtiesPath.line(to: NSPoint(x: -63.22, y: 36.5))
        thirtiesPath.move(to: NSPoint(x: -73, y: 126.44))
        thirtiesPath.line(to: NSPoint(x: -36.5, y: 63.22))
        strokeColor3.setStroke()
        thirtiesPath.lineWidth = 1
        thirtiesPath.lineCapStyle = .square
        thirtiesPath.stroke()


        //// 30Mask Drawing
        let _30MaskPath = NSBezierPath(ovalIn: NSRect(x: -115.5, y: -114.5, width: 230, height: 230))
        NSColor.white.setFill()
        _30MaskPath.fill()


        //// Major
        NSGraphicsContext.saveGraphicsState()
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        //// Clip Clip
        let clipPath = NSBezierPath(rect: NSRect(x: -150, y: -150, width: 300, height: 300))
        clipPath.addClip()


        //// Bezier 3 Drawing
        let bezier3Path = NSBezierPath()
        bezier3Path.move(to: NSPoint(x: -0, y: 150))
        bezier3Path.line(to: NSPoint(x: -0, y: 75))
        bezier3Path.move(to: NSPoint(x: 150, y: 0))
        bezier3Path.line(to: NSPoint(x: 75, y: 0))
        bezier3Path.move(to: NSPoint(x: -0, y: -150))
        bezier3Path.line(to: NSPoint(x: -0, y: -75))
        bezier3Path.move(to: NSPoint(x: -150, y: 0))
        bezier3Path.line(to: NSPoint(x: -75, y: 0))
        strokeColor4.setStroke()
        bezier3Path.lineWidth = 3
        bezier3Path.lineCapStyle = .square
        bezier3Path.stroke()


        //// Polygon 3 Drawing
        let polygon3Path = NSBezierPath()
        polygon3Path.move(to: NSPoint(x: 0, y: 124))
        polygon3Path.line(to: NSPoint(x: 7.13, y: 108.11))
        polygon3Path.line(to: NSPoint(x: 4.41, y: 82.39))
        polygon3Path.line(to: NSPoint(x: -4.41, y: 82.39))
        polygon3Path.line(to: NSPoint(x: -7.13, y: 108.11))
        polygon3Path.close()
        strokeColor4.setFill()
        polygon3Path.fill()
        strokeColor4.setStroke()
        polygon3Path.lineWidth = 3
        polygon3Path.stroke()


        context.endTransparencyLayer()
        NSGraphicsContext.restoreGraphicsState()


        //// 330
        NSGraphicsContext.saveGraphicsState()
        context.translateBy(x: -58, y: 99)
        context.rotate(by: textRotation * CGFloat.pi/180)



        //// Rectangle 6 Drawing
        let rectangle6Path = NSBezierPath(roundedRect: NSRect(x: -15, y: -9, width: 30, height: 18), xRadius: 4, yRadius: 4)
        NSColor.lightGray.setFill()
        rectangle6Path.fill()


        //// Text 6 Drawing
        let text6Rect = NSRect(x: -15, y: -9, width: 30, height: 18)
        let text6TextContent = "330"
        let text6Style = NSMutableParagraphStyle()
        text6Style.alignment = .center
        let text6FontAttributes = [
            NSAttributedString.Key.font: NSFont.systemFont(ofSize: 14),
            NSAttributedString.Key.foregroundColor: NSColor.white,
            NSAttributedString.Key.paragraphStyle: text6Style,
        ]

        let text6TextHeight: CGFloat = text6TextContent.boundingRect(with: NSSize(width: text6Rect.width, height: CGFloat.infinity), options: .usesLineFragmentOrigin, attributes: text6FontAttributes).height
        let text6TextRect: NSRect = NSRect(x: text6Rect.minX, y: text6Rect.minY + (text6Rect.height - text6TextHeight) / 2, width: text6Rect.width, height: text6TextHeight)
        NSGraphicsContext.saveGraphicsState()
        text6Rect.clip()
        text6TextContent.draw(in: text6TextRect.offsetBy(dx: 0, dy: 0.5), withAttributes: text6FontAttributes)
        NSGraphicsContext.restoreGraphicsState()



        NSGraphicsContext.restoreGraphicsState()


        //// 300
        NSGraphicsContext.saveGraphicsState()
        context.translateBy(x: -100, y: 57)
        context.rotate(by: textRotation * CGFloat.pi/180)



        //// Rectangle 7 Drawing
        let rectangle7Path = NSBezierPath(roundedRect: NSRect(x: -15, y: -8.5, width: 30, height: 18), xRadius: 4, yRadius: 4)
        NSColor.lightGray.setFill()
        rectangle7Path.fill()


        //// Text 7 Drawing
        let text7Rect = NSRect(x: -15, y: -8.5, width: 30, height: 18)
        let text7TextContent = "300"
        let text7Style = NSMutableParagraphStyle()
        text7Style.alignment = .center
        let text7FontAttributes = [
            NSAttributedString.Key.font: NSFont.systemFont(ofSize: 14),
            NSAttributedString.Key.foregroundColor: NSColor.white,
            NSAttributedString.Key.paragraphStyle: text7Style,
        ]

        let text7TextHeight: CGFloat = text7TextContent.boundingRect(with: NSSize(width: text7Rect.width, height: CGFloat.infinity), options: .usesLineFragmentOrigin, attributes: text7FontAttributes).height
        let text7TextRect: NSRect = NSRect(x: text7Rect.minX, y: text7Rect.minY + (text7Rect.height - text7TextHeight) / 2, width: text7Rect.width, height: text7TextHeight)
        NSGraphicsContext.saveGraphicsState()
        text7Rect.clip()
        text7TextContent.draw(in: text7TextRect.offsetBy(dx: 0, dy: 0.5), withAttributes: text7FontAttributes)
        NSGraphicsContext.restoreGraphicsState()



        NSGraphicsContext.restoreGraphicsState()


        //// 270
        NSGraphicsContext.saveGraphicsState()
        context.translateBy(x: -74, y: 0)
        context.rotate(by: textRotation * CGFloat.pi/180)



        //// Rectangle 4 Drawing
        let rectangle4Path = NSBezierPath(roundedRect: NSRect(x: -16, y: -10.5, width: 32, height: 21), xRadius: 4, yRadius: 4)
        NSColor.gray.setFill()
        rectangle4Path.fill()


        //// Text 4 Drawing
        let text4Rect = NSRect(x: -16, y: -10.5, width: 32, height: 21)
        let text4TextContent = "270"
        let text4Style = NSMutableParagraphStyle()
        text4Style.alignment = .center
        let text4FontAttributes = [
            NSAttributedString.Key.font: NSFont.systemFont(ofSize: 17),
            NSAttributedString.Key.foregroundColor: NSColor.white,
            NSAttributedString.Key.paragraphStyle: text4Style,
        ]

        let text4TextHeight: CGFloat = text4TextContent.boundingRect(with: NSSize(width: text4Rect.width, height: CGFloat.infinity), options: .usesLineFragmentOrigin, attributes: text4FontAttributes).height
        let text4TextRect: NSRect = NSRect(x: text4Rect.minX, y: text4Rect.minY + (text4Rect.height - text4TextHeight) / 2, width: text4Rect.width, height: text4TextHeight)
        NSGraphicsContext.saveGraphicsState()
        text4Rect.clip()
        text4TextContent.draw(in: text4TextRect.offsetBy(dx: 0, dy: 0.5), withAttributes: text4FontAttributes)
        NSGraphicsContext.restoreGraphicsState()



        NSGraphicsContext.restoreGraphicsState()


        //// 240
        NSGraphicsContext.saveGraphicsState()
        context.translateBy(x: -100, y: -58)
        context.rotate(by: textRotation * CGFloat.pi/180)



        //// Rectangle 8 Drawing
        let rectangle8Path = NSBezierPath(roundedRect: NSRect(x: -15, y: -8.5, width: 30, height: 18), xRadius: 4, yRadius: 4)
        NSColor.lightGray.setFill()
        rectangle8Path.fill()


        //// Text 8 Drawing
        let text8Rect = NSRect(x: -15, y: -8.5, width: 30, height: 18)
        let text8TextContent = "240"
        let text8Style = NSMutableParagraphStyle()
        text8Style.alignment = .center
        let text8FontAttributes = [
            NSAttributedString.Key.font: NSFont.systemFont(ofSize: 14),
            NSAttributedString.Key.foregroundColor: NSColor.white,
            NSAttributedString.Key.paragraphStyle: text8Style,
        ]

        let text8TextHeight: CGFloat = text8TextContent.boundingRect(with: NSSize(width: text8Rect.width, height: CGFloat.infinity), options: .usesLineFragmentOrigin, attributes: text8FontAttributes).height
        let text8TextRect: NSRect = NSRect(x: text8Rect.minX, y: text8Rect.minY + (text8Rect.height - text8TextHeight) / 2, width: text8Rect.width, height: text8TextHeight)
        NSGraphicsContext.saveGraphicsState()
        text8Rect.clip()
        text8TextContent.draw(in: text8TextRect.offsetBy(dx: 0, dy: 0.5), withAttributes: text8FontAttributes)
        NSGraphicsContext.restoreGraphicsState()



        NSGraphicsContext.restoreGraphicsState()


        //// 210
        NSGraphicsContext.saveGraphicsState()
        context.translateBy(x: -58, y: -100)
        context.rotate(by: textRotation * CGFloat.pi/180)



        //// Rectangle 9 Drawing
        let rectangle9Path = NSBezierPath(roundedRect: NSRect(x: -15, y: -8.5, width: 30, height: 18), xRadius: 4, yRadius: 4)
        NSColor.lightGray.setFill()
        rectangle9Path.fill()


        //// Text 9 Drawing
        let text9Rect = NSRect(x: -15, y: -8.5, width: 30, height: 18)
        let text9TextContent = "210"
        let text9Style = NSMutableParagraphStyle()
        text9Style.alignment = .center
        let text9FontAttributes = [
            NSAttributedString.Key.font: NSFont.systemFont(ofSize: 14),
            NSAttributedString.Key.foregroundColor: NSColor.white,
            NSAttributedString.Key.paragraphStyle: text9Style,
        ]

        let text9TextHeight: CGFloat = text9TextContent.boundingRect(with: NSSize(width: text9Rect.width, height: CGFloat.infinity), options: .usesLineFragmentOrigin, attributes: text9FontAttributes).height
        let text9TextRect: NSRect = NSRect(x: text9Rect.minX, y: text9Rect.minY + (text9Rect.height - text9TextHeight) / 2, width: text9Rect.width, height: text9TextHeight)
        NSGraphicsContext.saveGraphicsState()
        text9Rect.clip()
        text9TextContent.draw(in: text9TextRect.offsetBy(dx: 0, dy: 0.5), withAttributes: text9FontAttributes)
        NSGraphicsContext.restoreGraphicsState()



        NSGraphicsContext.restoreGraphicsState()


        //// 180
        NSGraphicsContext.saveGraphicsState()
        context.translateBy(x: -0, y: -74)
        context.rotate(by: textRotation * CGFloat.pi/180)



        //// Rectangle 3 Drawing
        let rectangle3Path = NSBezierPath(roundedRect: NSRect(x: -16, y: -10.5, width: 32, height: 21), xRadius: 4, yRadius: 4)
        NSColor.gray.setFill()
        rectangle3Path.fill()


        //// Text 3 Drawing
        let text3Rect = NSRect(x: -16, y: -10.5, width: 32, height: 21)
        let text3TextContent = "180"
        let text3Style = NSMutableParagraphStyle()
        text3Style.alignment = .center
        let text3FontAttributes = [
            NSAttributedString.Key.font: NSFont.systemFont(ofSize: 17),
            NSAttributedString.Key.foregroundColor: NSColor.white,
            NSAttributedString.Key.paragraphStyle: text3Style,
        ]

        let text3TextHeight: CGFloat = text3TextContent.boundingRect(with: NSSize(width: text3Rect.width, height: CGFloat.infinity), options: .usesLineFragmentOrigin, attributes: text3FontAttributes).height
        let text3TextRect: NSRect = NSRect(x: text3Rect.minX, y: text3Rect.minY + (text3Rect.height - text3TextHeight) / 2, width: text3Rect.width, height: text3TextHeight)
        NSGraphicsContext.saveGraphicsState()
        text3Rect.clip()
        text3TextContent.draw(in: text3TextRect.offsetBy(dx: 0, dy: 0.5), withAttributes: text3FontAttributes)
        NSGraphicsContext.restoreGraphicsState()



        NSGraphicsContext.restoreGraphicsState()


        //// 150
        NSGraphicsContext.saveGraphicsState()
        context.translateBy(x: 57, y: -100)
        context.rotate(by: textRotation * CGFloat.pi/180)



        //// Rectangle 10 Drawing
        let rectangle10Path = NSBezierPath(roundedRect: NSRect(x: -15, y: -8.5, width: 30, height: 18), xRadius: 4, yRadius: 4)
        NSColor.lightGray.setFill()
        rectangle10Path.fill()


        //// Text 10 Drawing
        let text10Rect = NSRect(x: -15, y: -8.5, width: 30, height: 18)
        let text10TextContent = "150"
        let text10Style = NSMutableParagraphStyle()
        text10Style.alignment = .center
        let text10FontAttributes = [
            NSAttributedString.Key.font: NSFont.systemFont(ofSize: 14),
            NSAttributedString.Key.foregroundColor: NSColor.white,
            NSAttributedString.Key.paragraphStyle: text10Style,
        ]

        let text10TextHeight: CGFloat = text10TextContent.boundingRect(with: NSSize(width: text10Rect.width, height: CGFloat.infinity), options: .usesLineFragmentOrigin, attributes: text10FontAttributes).height
        let text10TextRect: NSRect = NSRect(x: text10Rect.minX, y: text10Rect.minY + (text10Rect.height - text10TextHeight) / 2, width: text10Rect.width, height: text10TextHeight)
        NSGraphicsContext.saveGraphicsState()
        text10Rect.clip()
        text10TextContent.draw(in: text10TextRect.offsetBy(dx: 0, dy: 0.5), withAttributes: text10FontAttributes)
        NSGraphicsContext.restoreGraphicsState()



        NSGraphicsContext.restoreGraphicsState()


        //// 120
        NSGraphicsContext.saveGraphicsState()
        context.translateBy(x: 100, y: -57)
        context.rotate(by: textRotation * CGFloat.pi/180)



        //// Rectangle 11 Drawing
        let rectangle11Path = NSBezierPath(roundedRect: NSRect(x: -15, y: -8.5, width: 30, height: 18), xRadius: 4, yRadius: 4)
        NSColor.lightGray.setFill()
        rectangle11Path.fill()


        //// Text 11 Drawing
        let text11Rect = NSRect(x: -15, y: -8.5, width: 30, height: 18)
        let text11TextContent = "120"
        let text11Style = NSMutableParagraphStyle()
        text11Style.alignment = .center
        let text11FontAttributes = [
            NSAttributedString.Key.font: NSFont.systemFont(ofSize: 14),
            NSAttributedString.Key.foregroundColor: NSColor.white,
            NSAttributedString.Key.paragraphStyle: text11Style,
        ]

        let text11TextHeight: CGFloat = text11TextContent.boundingRect(with: NSSize(width: text11Rect.width, height: CGFloat.infinity), options: .usesLineFragmentOrigin, attributes: text11FontAttributes).height
        let text11TextRect: NSRect = NSRect(x: text11Rect.minX, y: text11Rect.minY + (text11Rect.height - text11TextHeight) / 2, width: text11Rect.width, height: text11TextHeight)
        NSGraphicsContext.saveGraphicsState()
        text11Rect.clip()
        text11TextContent.draw(in: text11TextRect.offsetBy(dx: 0, dy: 0.5), withAttributes: text11FontAttributes)
        NSGraphicsContext.restoreGraphicsState()



        NSGraphicsContext.restoreGraphicsState()


        //// 90
        NSGraphicsContext.saveGraphicsState()
        context.translateBy(x: 74, y: 0)
        context.rotate(by: textRotation * CGFloat.pi/180)



        //// Rectangle 2 Drawing
        let rectangle2Path = NSBezierPath(roundedRect: NSRect(x: -16, y: -10.5, width: 32, height: 21), xRadius: 4, yRadius: 4)
        NSColor.gray.setFill()
        rectangle2Path.fill()


        //// Text 2 Drawing
        let text2Rect = NSRect(x: -16, y: -10.5, width: 32, height: 21)
        let text2TextContent = "90"
        let text2Style = NSMutableParagraphStyle()
        text2Style.alignment = .center
        let text2FontAttributes = [
            NSAttributedString.Key.font: NSFont.systemFont(ofSize: 17),
            NSAttributedString.Key.foregroundColor: NSColor.white,
            NSAttributedString.Key.paragraphStyle: text2Style,
        ]

        let text2TextHeight: CGFloat = text2TextContent.boundingRect(with: NSSize(width: text2Rect.width, height: CGFloat.infinity), options: .usesLineFragmentOrigin, attributes: text2FontAttributes).height
        let text2TextRect: NSRect = NSRect(x: text2Rect.minX, y: text2Rect.minY + (text2Rect.height - text2TextHeight) / 2, width: text2Rect.width, height: text2TextHeight)
        NSGraphicsContext.saveGraphicsState()
        text2Rect.clip()
        text2TextContent.draw(in: text2TextRect.offsetBy(dx: 0, dy: 0.5), withAttributes: text2FontAttributes)
        NSGraphicsContext.restoreGraphicsState()



        NSGraphicsContext.restoreGraphicsState()


        //// 60
        NSGraphicsContext.saveGraphicsState()
        context.translateBy(x: 99, y: 57)
        context.rotate(by: textRotation * CGFloat.pi/180)



        //// Rectangle 12 Drawing
        let rectangle12Path = NSBezierPath(roundedRect: NSRect(x: -15, y: -8.5, width: 30, height: 18), xRadius: 4, yRadius: 4)
        NSColor.lightGray.setFill()
        rectangle12Path.fill()


        //// Text 12 Drawing
        let text12Rect = NSRect(x: -15, y: -8.5, width: 30, height: 18)
        let text12TextContent = "60"
        let text12Style = NSMutableParagraphStyle()
        text12Style.alignment = .center
        let text12FontAttributes = [
            NSAttributedString.Key.font: NSFont.systemFont(ofSize: 14),
            NSAttributedString.Key.foregroundColor: NSColor.white,
            NSAttributedString.Key.paragraphStyle: text12Style,
        ]

        let text12TextHeight: CGFloat = text12TextContent.boundingRect(with: NSSize(width: text12Rect.width, height: CGFloat.infinity), options: .usesLineFragmentOrigin, attributes: text12FontAttributes).height
        let text12TextRect: NSRect = NSRect(x: text12Rect.minX, y: text12Rect.minY + (text12Rect.height - text12TextHeight) / 2, width: text12Rect.width, height: text12TextHeight)
        NSGraphicsContext.saveGraphicsState()
        text12Rect.clip()
        text12TextContent.draw(in: text12TextRect.offsetBy(dx: 0, dy: 0.5), withAttributes: text12FontAttributes)
        NSGraphicsContext.restoreGraphicsState()



        NSGraphicsContext.restoreGraphicsState()


        //// 30
        NSGraphicsContext.saveGraphicsState()
        context.translateBy(x: 57, y: 99)
        context.rotate(by: textRotation * CGFloat.pi/180)



        //// Rectangle 5 Drawing
        let rectangle5Path = NSBezierPath(roundedRect: NSRect(x: -15, y: -8.5, width: 30, height: 18), xRadius: 4, yRadius: 4)
        color.setFill()
        rectangle5Path.fill()


        //// Text 5 Drawing
        let text5Rect = NSRect(x: -15, y: -8.5, width: 30, height: 18)
        let text5TextContent = "30"
        let text5Style = NSMutableParagraphStyle()
        text5Style.alignment = .center
        let text5FontAttributes = [
            NSAttributedString.Key.font: NSFont.systemFont(ofSize: 14),
            NSAttributedString.Key.foregroundColor: NSColor.white,
            NSAttributedString.Key.paragraphStyle: text5Style,
        ]

        let text5TextHeight: CGFloat = text5TextContent.boundingRect(with: NSSize(width: text5Rect.width, height: CGFloat.infinity), options: .usesLineFragmentOrigin, attributes: text5FontAttributes).height
        let text5TextRect: NSRect = NSRect(x: text5Rect.minX, y: text5Rect.minY + (text5Rect.height - text5TextHeight) / 2, width: text5Rect.width, height: text5TextHeight)
        NSGraphicsContext.saveGraphicsState()
        text5Rect.clip()
        text5TextContent.draw(in: text5TextRect.offsetBy(dx: 0, dy: 0.5), withAttributes: text5FontAttributes)
        NSGraphicsContext.restoreGraphicsState()



        NSGraphicsContext.restoreGraphicsState()


        //// 0
        NSGraphicsContext.saveGraphicsState()
        context.translateBy(x: -0, y: 74)
        context.rotate(by: textRotation * CGFloat.pi/180)



        //// Rectangle Drawing
        let rectanglePath = NSBezierPath(roundedRect: NSRect(x: -16, y: -10.5, width: 32, height: 21), xRadius: 4, yRadius: 4)
        NSColor.gray.setFill()
        rectanglePath.fill()


        //// Text Drawing
        let textRect = NSRect(x: -16, y: -10.5, width: 32, height: 21)
        let textTextContent = "0"
        let textStyle = NSMutableParagraphStyle()
        textStyle.alignment = .center
        let textFontAttributes = [
            NSAttributedString.Key.font: NSFont.systemFont(ofSize: 17),
            NSAttributedString.Key.foregroundColor: NSColor.white,
            NSAttributedString.Key.paragraphStyle: textStyle,
        ]

        let textTextHeight: CGFloat = textTextContent.boundingRect(with: NSSize(width: textRect.width, height: CGFloat.infinity), options: .usesLineFragmentOrigin, attributes: textFontAttributes).height
        let textTextRect: NSRect = NSRect(x: textRect.minX, y: textRect.minY + (textRect.height - textTextHeight) / 2, width: textRect.width, height: textTextHeight)
        NSGraphicsContext.saveGraphicsState()
        textRect.clip()
        textTextContent.draw(in: textTextRect.offsetBy(dx: 0, dy: 0.5), withAttributes: textFontAttributes)
        NSGraphicsContext.restoreGraphicsState()



        NSGraphicsContext.restoreGraphicsState()



        NSGraphicsContext.restoreGraphicsState()


        //// Indicator
        //// Rectangle 13 Drawing
        let rectangle13Path = NSBezierPath()
        rectangle13Path.move(to: NSPoint(x: 166, y: 300))
        rectangle13Path.line(to: NSPoint(x: 166, y: 263.38))
        rectangle13Path.curve(to: NSPoint(x: 165.74, y: 258.11), controlPoint1: NSPoint(x: 166, y: 260.68), controlPoint2: NSPoint(x: 166, y: 259.33))
        rectangle13Path.line(to: NSPoint(x: 165.7, y: 257.87))
        rectangle13Path.curve(to: NSPoint(x: 163.47, y: 254.46), controlPoint1: NSPoint(x: 165.32, y: 256.29), controlPoint2: NSPoint(x: 164.51, y: 255.04))
        rectangle13Path.curve(to: NSPoint(x: 159.89, y: 254), controlPoint1: NSPoint(x: 162.53, y: 254), controlPoint2: NSPoint(x: 161.65, y: 254))
        rectangle13Path.line(to: NSPoint(x: 140.11, y: 254))
        rectangle13Path.curve(to: NSPoint(x: 136.68, y: 254.4), controlPoint1: NSPoint(x: 138.35, y: 254), controlPoint2: NSPoint(x: 137.47, y: 254))
        rectangle13Path.line(to: NSPoint(x: 136.53, y: 254.46))
        rectangle13Path.curve(to: NSPoint(x: 134.3, y: 257.87), controlPoint1: NSPoint(x: 135.49, y: 255.04), controlPoint2: NSPoint(x: 134.68, y: 256.29))
        rectangle13Path.curve(to: NSPoint(x: 134, y: 263.38), controlPoint1: NSPoint(x: 134, y: 259.33), controlPoint2: NSPoint(x: 134, y: 260.68))
        rectangle13Path.line(to: NSPoint(x: 134, y: 300))
        rectangle13Path.line(to: NSPoint(x: 166, y: 300))
        rectangle13Path.close()
        color.setStroke()
        rectangle13Path.lineWidth = 1
        rectangle13Path.stroke()


        //// Polygon Drawing
        let polygonPath = NSBezierPath()
        polygonPath.move(to: NSPoint(x: 134, y: 300))
        polygonPath.line(to: NSPoint(x: 148, y: 300))
        polygonPath.line(to: NSPoint(x: 148, y: 275))
        polygonPath.line(to: NSPoint(x: 145, y: 275))
        polygonPath.line(to: NSPoint(x: 134.34, y: 290.33))
        polygonPath.line(to: NSPoint(x: 134, y: 300))
        polygonPath.close()
        color4.setFill()
        polygonPath.fill()


        //// Polygon 2 Drawing
        let polygon2Path = NSBezierPath()
        polygon2Path.move(to: NSPoint(x: 166, y: 300))
        polygon2Path.line(to: NSPoint(x: 152, y: 300))
        polygon2Path.line(to: NSPoint(x: 152, y: 275))
        polygon2Path.line(to: NSPoint(x: 155, y: 275))
        polygon2Path.line(to: NSPoint(x: 165.66, y: 290.33))
        polygon2Path.line(to: NSPoint(x: 166, y: 300))
        polygon2Path.close()
        color5.setFill()
        polygon2Path.fill()




        //// TextDisplay
        //// Rectangle 14 Drawing
        let rectangle14Path = NSBezierPath(roundedRect: NSRect(x: 109, y: 124, width: 83, height: 53), xRadius: 2, yRadius: 2)
        DMHeadingDial.color7.setFill()
        rectangle14Path.fill()
        NSColor.darkGray.setStroke()
        rectangle14Path.lineWidth = 1
        rectangle14Path.stroke()


        //// Text 13 Drawing
        let text13Rect = NSRect(x: 112, y: 127, width: 77, height: 13)
        let text13Style = NSMutableParagraphStyle()
        text13Style.alignment = .center
        let text13FontAttributes = [
            NSAttributedString.Key.font: NSFont(name: "AvenirNextCondensed-DemiBold", size: 12)!,
            NSAttributedString.Key.foregroundColor: NSColor.black,
            NSAttributedString.Key.paragraphStyle: text13Style,
        ]

        let text13TextHeight: CGFloat = mode.boundingRect(with: NSSize(width: text13Rect.width, height: CGFloat.infinity), options: .usesLineFragmentOrigin, attributes: text13FontAttributes).height
        let text13TextRect: NSRect = NSRect(x: text13Rect.minX, y: text13Rect.minY + (text13Rect.height - text13TextHeight) / 2, width: text13Rect.width, height: text13TextHeight)
        NSGraphicsContext.saveGraphicsState()
        text13Rect.clip()
        mode.draw(in: text13TextRect.offsetBy(dx: 0, dy: 1.5), withAttributes: text13FontAttributes)
        NSGraphicsContext.restoreGraphicsState()


        //// Text 14 Drawing
        let text14Rect = NSRect(x: 109, y: 139, width: 83, height: 32)
        let text14Style = NSMutableParagraphStyle()
        text14Style.alignment = .center
        let text14FontAttributes = [
            NSAttributedString.Key.font: NSFont(name: "AvenirNextCondensed-Medium", size: 23)!,
            NSAttributedString.Key.foregroundColor: NSColor.black,
            NSAttributedString.Key.paragraphStyle: text14Style,
        ]

        let text14TextHeight: CGFloat = heading.boundingRect(with: NSSize(width: text14Rect.width, height: CGFloat.infinity), options: .usesLineFragmentOrigin, attributes: text14FontAttributes).height
        let text14TextRect: NSRect = NSRect(x: text14Rect.minX, y: text14Rect.minY + (text14Rect.height - text14TextHeight) / 2, width: text14Rect.width, height: text14TextHeight)
        NSGraphicsContext.saveGraphicsState()
        text14Rect.clip()
        heading.draw(in: text14TextRect.offsetBy(dx: 0, dy: 3), withAttributes: text14FontAttributes)
        NSGraphicsContext.restoreGraphicsState()




        //// Bezier Drawing
        let bezierPath = NSBezierPath()
        bezierPath.move(to: NSPoint(x: 150, y: 297))
        bezierPath.curve(to: NSPoint(x: 62.42, y: 268.07), controlPoint1: NSPoint(x: 117.19, y: 297), controlPoint2: NSPoint(x: 86.88, y: 286.25))
        bezierPath.curve(to: NSPoint(x: 3, y: 150), controlPoint1: NSPoint(x: 26.36, y: 241.29), controlPoint2: NSPoint(x: 3, y: 198.37))
        bezierPath.curve(to: NSPoint(x: 150, y: 3), controlPoint1: NSPoint(x: 3, y: 68.81), controlPoint2: NSPoint(x: 68.81, y: 3))
        bezierPath.curve(to: NSPoint(x: 297, y: 150), controlPoint1: NSPoint(x: 231.19, y: 3), controlPoint2: NSPoint(x: 297, y: 68.81))
        bezierPath.curve(to: NSPoint(x: 150, y: 297), controlPoint1: NSPoint(x: 297, y: 231.19), controlPoint2: NSPoint(x: 231.19, y: 297))
        bezierPath.close()
        bezierPath.move(to: NSPoint(x: 300, y: 300))
        bezierPath.curve(to: NSPoint(x: 300, y: 0), controlPoint1: NSPoint(x: 300, y: 300), controlPoint2: NSPoint(x: 300, y: 0))
        bezierPath.line(to: NSPoint(x: 0, y: 0))
        bezierPath.line(to: NSPoint(x: 0, y: 300))
        bezierPath.line(to: NSPoint(x: 300, y: 300))
        bezierPath.line(to: NSPoint(x: 300, y: 300))
        bezierPath.close()
        NSColor.black.setFill()
        bezierPath.fill()
        
        NSGraphicsContext.restoreGraphicsState()

    }




    @objc(DMHeadingDialResizingBehavior)
    public enum ResizingBehavior: Int {
        case aspectFit /// The content is proportionally resized to fit into the target rectangle.
        case aspectFill /// The content is proportionally resized to completely fill the target rectangle.
        case stretch /// The content is stretched to match the entire target rectangle.
        case center /// The content is centered in the target rectangle, but it is NOT resized.

        public func apply(rect: NSRect, target: NSRect) -> NSRect {
            if rect == target || target == NSRect.zero {
                return rect
            }

            var scales = NSSize.zero
            scales.width = abs(target.width / rect.width)
            scales.height = abs(target.height / rect.height)

            switch self {
                case .aspectFit:
                    scales.width = min(scales.width, scales.height)
                    scales.height = scales.width
                case .aspectFill:
                    scales.width = max(scales.width, scales.height)
                    scales.height = scales.width
                case .stretch:
                    break
                case .center:
                    scales.width = 1
                    scales.height = 1
            }

            var result = rect.standardized
            result.size.width *= scales.width
            result.size.height *= scales.height
            result.origin.x = target.minX + (target.width - result.width) / 2
            result.origin.y = target.minY + (target.height - result.height) / 2
            return result
        }
    }
}
